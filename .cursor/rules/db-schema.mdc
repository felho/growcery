---
description: Database schema conventions
globs: src/server/db/schema/**/*
alwaysApply: false
---

# Database Schema Standards

## File Organization
- Tables: Define tables under `server/db/schema/tables/`
- Relations: Define relations under `server/db/schema/relations/`

## Table Creation
- Naming: Use `pgTableCreator` to prefix table names with `growcery_`
- Primary Keys: All PK columns must explicitly include `.notNull()` even though Postgres enforces it implicitly
- Constraints: Define constraints like indexes and primary keys as array elements in the second `createTable` parameter
  - Correct: `[index(...).on(...)]`
  - Incorrect: `{ indexName: ... }`

## Relations
- Self References: Use arrow function syntax when a table references itself:
  ```typescript
  // For self-referencing relationships like managerId in users
  manager: one(users, {
    fields: [users.managerId],
    references: (): AnyPgColumn => users.id,
  }),
  ```

## Example Table Definition
```typescript
import { pgTableCreator } from "~/lib/drizzle";

export const createTable = pgTableCreator((name) => `growcery_${name}`);

export const users = createTable("users", {
  id: uuid("id").primaryKey().notNull(),
  email: text("email").notNull().unique(),
  name: text("name").notNull(),
  managerId: uuid("manager_id").references((): AnyPgColumn => users.id),
}, [
  index("users_email_idx").on(users.email)
]);
```