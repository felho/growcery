---
description: 
globs: 
alwaysApply: true
---

# Type Conventions

## Placement
- Define types in each entity's `queries/index.ts` file
- Export types for use in actions and client-side code

## Naming Conventions
- Select Types: Use semantic, singular names like `User`, `OrgUnit`
- Insert Types: Use `New` prefix for creation types, e.g., `NewUser`
- Joined Types: Use `With` suffix for relation-extended types, e.g., `UserWithPosts`
- Avoid Names: Do not use generic names like `Record` or `Row`; prefer descriptive names

## Type Structure
- Keep types focused on their purpose
- Use interface for extensibility, type aliases for unions or complex types
- Include JSDoc comments for complex types

## Example Type Definitions
```typescript
// Base type
export interface User {
  id: string;
  email: string;
  name: string;
  roleId: string;
}

// Creation type
export type NewUser = Omit<User, 'id'>;

// Extended type with relations
export interface UserWithRole extends User {
  role: Role;
}
```